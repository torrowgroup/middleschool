<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.torrow.school.dao.TbMessageDao">
  <resultMap id="BaseResultMap" type="com.torrow.school.entity.TbMessage">
    <id column="me_id" jdbcType="INTEGER" property="meId" />
    <result column="me_title" jdbcType="VARCHAR" property="meTitle" />
    <result column="me_picture" jdbcType="VARCHAR" property="mePicture" />
    <result column="me_hide" jdbcType="VARCHAR" property="meHide" />
    <result column="me_issuingdate" jdbcType="VARCHAR" property="meIssuingdate" />
    <result column="me_status" jdbcType="VARCHAR" property="meStatus" />
    <result column="spare" jdbcType="VARCHAR" property="spare" />
    <result column="me_content" jdbcType="LONGVARCHAR" property="meContent" />
    <result column="me_reply" jdbcType="LONGVARCHAR" property="meReply" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from tb_message
    where me_id = #{meId,jdbcType=INTEGER}
  </delete>
  
  <insert id="insert" parameterType="com.torrow.school.entity.TbMessage">
    insert into tb_message ( me_title, me_picture, 
      me_hide, me_issuingdate, me_status, 
      spare, me_content, me_reply
      )
    values ( #{meTitle,jdbcType=VARCHAR}, #{mePicture,jdbcType=VARCHAR}, 
      #{meHide,jdbcType=VARCHAR}, #{meIssuingdate,jdbcType=VARCHAR}, #{meStatus,jdbcType=VARCHAR}, 
      #{spare,jdbcType=VARCHAR}, #{meContent,jdbcType=LONGVARCHAR}, #{meReply,jdbcType=LONGVARCHAR}
      )
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.torrow.school.entity.TbMessage">
    update tb_message
    set me_title = #{meTitle,jdbcType=VARCHAR},
      me_picture = #{mePicture,jdbcType=VARCHAR},
      me_hide = #{meHide,jdbcType=VARCHAR},
      me_issuingdate = #{meIssuingdate,jdbcType=VARCHAR},
      me_status = #{meStatus,jdbcType=VARCHAR},
      spare = #{spare,jdbcType=VARCHAR},
      me_content = #{meContent,jdbcType=LONGVARCHAR},
      me_reply = #{meReply,jdbcType=LONGVARCHAR}
    where me_id = #{meId,jdbcType=INTEGER}
  </update>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select me_id, me_title, me_picture, me_hide, me_issuingdate, me_status, spare, me_content, 
    me_reply
    from tb_message
    where me_id = #{meId,jdbcType=INTEGER}
  </select>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select me_id, me_title, me_picture, me_hide, me_issuingdate, me_status, spare, me_content, 
    me_reply
    from tb_message
  </select>
  
  <select id="selectBlur" resultMap="BaseResultMap">
    select me_id, me_title, me_picture, me_hide, me_issuingdate, me_status, spare, me_content, 
    me_reply
    from tb_message 
    <if test="inquiry!=null">
    	where concat (me_title,',',me_hide,',',me_status,',',me_issuingdate) like '%' #{inquiry} '%' 
    </if>
    ORDER BY me_id DESC 
  </select>
  
  
  <!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select * from tb_message
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>
  
  <!-- 查询用户记录总数 -->
	<select id="selectCount" resultType="int">
		select count(*) from tb_message
	</select>
</mapper>