<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.torrow.school.dao.TbUserDao">

	<resultMap id="BaseResultMap" type="com.torrow.school.entity.TbUser">
		<id column="us_id" jdbcType="INTEGER" property="usId" />
		<result column="us_email" jdbcType="VARCHAR" property="usEmail" />
		<result column="us_password" jdbcType="VARCHAR" property="usPassword" />
		<result column="us_name" jdbcType="VARCHAR" property="usName" />
		<result column="us_sex" jdbcType="VARCHAR" property="usSex" />
		<result column="ca_id" jdbcType="INTEGER" property="caId" />
		<result column="ca_name" jdbcType="VARCHAR" property="caName" />
		<result column="us_phone" jdbcType="VARCHAR" property="usPhone" />
		<result column="us_picture" jdbcType="VARCHAR" property="usPicture" />
		<result column="us_introduction" jdbcType="VARCHAR" property="usIntroduction" />
		<result column="spare" jdbcType="VARCHAR" property="spare" />
		<result column="us_achievements" jdbcType="LONGVARCHAR"
			property="usAchievements" />
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from tb_user
		where us_id = #{usId,jdbcType=INTEGER}
	</delete>
	<!-- 根据caId来删除 -->
	<delete id="deleteByCaId" parameterType="java.lang.Integer">
		delete from tb_user
		where ca_id = #{caId,jdbcType=INTEGER}
	</delete>
	
	<!-- 添加用户 -->
	<insert id="insert" parameterType="com.torrow.school.entity.TbUser">
		insert into tb_user (us_email,
		us_password,
		us_name, us_sex, ca_id,
		ca_name, us_phone, us_picture,
		us_introduction, spare, us_achievements
		)
		values
		(#{usEmail,jdbcType=VARCHAR}, #{usPassword,jdbcType=VARCHAR},
		#{usName,jdbcType=VARCHAR}, #{usSex,jdbcType=VARCHAR},
		#{caId,jdbcType=INTEGER},
		#{caName,jdbcType=VARCHAR},
		#{usPhone,jdbcType=VARCHAR}, #{usPicture,jdbcType=VARCHAR},
		#{usIntroduction,jdbcType=VARCHAR}, #{spare,jdbcType=VARCHAR},
		#{usAchievements,jdbcType=LONGVARCHAR}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.torrow.school.entity.TbUser">
		update tb_user
		set
		us_email = #{usEmail,jdbcType=VARCHAR},
		us_password =
		#{usPassword,jdbcType=VARCHAR},
		us_name = #{usName,jdbcType=VARCHAR},
		us_sex = #{usSex,jdbcType=VARCHAR},
		ca_id = #{caId,jdbcType=INTEGER},
		ca_name = #{caName,jdbcType=VARCHAR},
		us_phone =
		#{usPhone,jdbcType=VARCHAR},
		us_picture =
		#{usPicture,jdbcType=VARCHAR},
		us_introduction =
		#{usIntroduction,jdbcType=VARCHAR},
		spare = #{spare,jdbcType=VARCHAR},
		us_achievements = #{usAchievements,jdbcType=LONGVARCHAR}
		where us_id =
		#{usId,jdbcType=INTEGER}
	</update>

	<select id="selectByPrimaryKey" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select us_id, us_email, us_password, us_name, us_sex, ca_id,
		ca_name,
		us_phone, us_picture,
		us_introduction, spare, us_achievements
		from tb_user
		where us_id = #{usId,jdbcType=INTEGER}
	</select>
	
	<!--根据caId来查询 -->
	<select id="selectByCaId" parameterType="java.lang.Integer"
		resultMap="BaseResultMap">
		select us_id, us_email, us_password, us_name, us_sex, ca_id,
		ca_name,
		us_phone, us_picture,
		us_introduction, spare, us_achievements
		from tb_user
		where ca_id = #{caId,jdbcType=INTEGER}
	</select>
	
	<select id="selectAll" resultMap="BaseResultMap">
		select us_id, us_email,
		us_password, us_name, us_sex, ca_id, ca_name,
		us_phone, us_picture,
		us_introduction, spare, us_achievements
		from tb_user
	</select>

	<!--login -->
	<select id="findUserByNameAndPwd" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select * from tb_user where us_email=#{usEmail} and
		us_password=#{usPassword}
	</select>

	<!-- 根据分页数据start 和size查询数据 -->
	<select id="findByPage" parameterType="Map" resultMap="BaseResultMap">
		select * from tb_user
		<if test="start!=null and size!=null">
			limit #{start},#{size}
		</if>
	</select>

	<!-- 查询用户记录总数 -->
	<select id="selectCount" resultType="int">
		select count(*) from tb_user
	</select>
	
	<!-- 根据邮箱得到用户 -->
	<select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from tb_user where us_email = #{email}
	</select>

	<select id="selectListByCaId" resultMap="BaseResultMap">
		select * from tb_user where ca_id = #{caId}
		<if test="content!=null and content !=''">
			and concat (us_name,',',us_email,',',ca_name,',',us_phone) like '%' #{content} '%';
		</if>
	</select>
	
</mapper>